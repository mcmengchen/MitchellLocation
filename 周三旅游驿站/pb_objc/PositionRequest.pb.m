// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "PositionRequest.pb.h"

@implementation PositionRequestRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [PositionRequestRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface Position_Request ()
@property (retain) NSMutableArray* mutableUpPositionsList;
@property (retain) NSString* uindex;
@end

@implementation Position_Request

@synthesize mutableUpPositionsList;
- (BOOL) hasUindex {
  return !!hasUindex_;
}
- (void) setHasUindex:(BOOL) value {
  hasUindex_ = !!value;
}
@synthesize uindex;
- (void) dealloc {
  self.mutableUpPositionsList = nil;
  self.uindex = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.uindex = @"";
  }
  return self;
}
static Position_Request* defaultPosition_RequestInstance = nil;
+ (void) initialize {
  if (self == [Position_Request class]) {
    defaultPosition_RequestInstance = [[Position_Request alloc] init];
  }
}
+ (Position_Request*) defaultInstance {
  return defaultPosition_RequestInstance;
}
- (Position_Request*) defaultInstance {
  return defaultPosition_RequestInstance;
}
- (NSArray*) upPositionsList {
  return mutableUpPositionsList;
}
- (Positions*) upPositionsAtIndex:(int32_t) index {
  id value = [mutableUpPositionsList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (Positions* element in self.upPositionsList) {
    [output writeMessage:1 value:element];
  }
  if (self.hasUindex) {
    [output writeString:2 value:self.uindex];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (Positions* element in self.upPositionsList) {
    size += computeMessageSize(1, element);
  }
  if (self.hasUindex) {
    size += computeStringSize(2, self.uindex);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (Position_Request*) parseFromData:(NSData*) data {
  return (Position_Request*)[[[Position_Request builder] mergeFromData:data] build];
}
+ (Position_Request*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Position_Request*)[[[Position_Request builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Position_Request*) parseFromInputStream:(NSInputStream*) input {
  return (Position_Request*)[[[Position_Request builder] mergeFromInputStream:input] build];
}
+ (Position_Request*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Position_Request*)[[[Position_Request builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Position_Request*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Position_Request*)[[[Position_Request builder] mergeFromCodedInputStream:input] build];
}
+ (Position_Request*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Position_Request*)[[[Position_Request builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Position_Request_Builder*) builder {
  return [[[Position_Request_Builder alloc] init] autorelease];
}
+ (Position_Request_Builder*) builderWithPrototype:(Position_Request*) prototype {
  return [[Position_Request builder] mergeFrom:prototype];
}
- (Position_Request_Builder*) builder {
  return [Position_Request builder];
}
@end

@interface Position_Request_Builder()
@property (retain) Position_Request* result;
@end

@implementation Position_Request_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[Position_Request alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (Position_Request_Builder*) clear {
  self.result = [[[Position_Request alloc] init] autorelease];
  return self;
}
- (Position_Request_Builder*) clone {
  return [Position_Request builderWithPrototype:result];
}
- (Position_Request*) defaultInstance {
  return [Position_Request defaultInstance];
}
- (Position_Request*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Position_Request*) buildPartial {
  Position_Request* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (Position_Request_Builder*) mergeFrom:(Position_Request*) other {
  if (other == [Position_Request defaultInstance]) {
    return self;
  }
  if (other.mutableUpPositionsList.count > 0) {
    if (result.mutableUpPositionsList == nil) {
      result.mutableUpPositionsList = [NSMutableArray array];
    }
    [result.mutableUpPositionsList addObjectsFromArray:other.mutableUpPositionsList];
  }
  if (other.hasUindex) {
    [self setUindex:other.uindex];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (Position_Request_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (Position_Request_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        Positions_Builder* subBuilder = [Positions builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUpPositions:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setUindex:[input readString]];
        break;
      }
    }
  }
}
- (NSArray*) upPositionsList {
  if (result.mutableUpPositionsList == nil) { return [NSArray array]; }
  return result.mutableUpPositionsList;
}
- (Positions*) upPositionsAtIndex:(int32_t) index {
  return [result upPositionsAtIndex:index];
}
- (Position_Request_Builder*) replaceUpPositionsAtIndex:(int32_t) index with:(Positions*) value {
  [result.mutableUpPositionsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (Position_Request_Builder*) addAllUpPositions:(NSArray*) values {
  if (result.mutableUpPositionsList == nil) {
    result.mutableUpPositionsList = [NSMutableArray array];
  }
  [result.mutableUpPositionsList addObjectsFromArray:values];
  return self;
}
- (Position_Request_Builder*) clearUpPositionsList {
  result.mutableUpPositionsList = nil;
  return self;
}
- (Position_Request_Builder*) addUpPositions:(Positions*) value {
  if (result.mutableUpPositionsList == nil) {
    result.mutableUpPositionsList = [NSMutableArray array];
  }
  [result.mutableUpPositionsList addObject:value];
  return self;
}
- (BOOL) hasUindex {
  return result.hasUindex;
}
- (NSString*) uindex {
  return result.uindex;
}
- (Position_Request_Builder*) setUindex:(NSString*) value {
  result.hasUindex = YES;
  result.uindex = value;
  return self;
}
- (Position_Request_Builder*) clearUindex {
  result.hasUindex = NO;
  result.uindex = @"";
  return self;
}
@end

@interface Positions ()
@property Float64 x;
@property Float64 y;
@property Float64 h;
@property int32_t ptype;
@property Float64 power;
@property (retain) NSString* createTime;
@end

@implementation Positions

- (BOOL) hasX {
  return !!hasX_;
}
- (void) setHasX:(BOOL) value {
  hasX_ = !!value;
}
@synthesize x;
- (BOOL) hasY {
  return !!hasY_;
}
- (void) setHasY:(BOOL) value {
  hasY_ = !!value;
}
@synthesize y;
- (BOOL) hasH {
  return !!hasH_;
}
- (void) setHasH:(BOOL) value {
  hasH_ = !!value;
}
@synthesize h;
- (BOOL) hasPtype {
  return !!hasPtype_;
}
- (void) setHasPtype:(BOOL) value {
  hasPtype_ = !!value;
}
@synthesize ptype;
- (BOOL) hasPower {
  return !!hasPower_;
}
- (void) setHasPower:(BOOL) value {
  hasPower_ = !!value;
}
@synthesize power;
- (BOOL) hasCreateTime {
  return !!hasCreateTime_;
}
- (void) setHasCreateTime:(BOOL) value {
  hasCreateTime_ = !!value;
}
@synthesize createTime;
- (void) dealloc {
  self.createTime = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.x = 0;
    self.y = 0;
    self.h = 0;
    self.ptype = 0;
    self.power = 0;
    self.createTime = @"";
  }
  return self;
}
static Positions* defaultPositionsInstance = nil;
+ (void) initialize {
  if (self == [Positions class]) {
    defaultPositionsInstance = [[Positions alloc] init];
  }
}
+ (Positions*) defaultInstance {
  return defaultPositionsInstance;
}
- (Positions*) defaultInstance {
  return defaultPositionsInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasX) {
    [output writeDouble:2 value:self.x];
  }
  if (self.hasY) {
    [output writeDouble:3 value:self.y];
  }
  if (self.hasH) {
    [output writeDouble:4 value:self.h];
  }
  if (self.hasPtype) {
    [output writeInt32:5 value:self.ptype];
  }
  if (self.hasPower) {
    [output writeDouble:6 value:self.power];
  }
  if (self.hasCreateTime) {
    [output writeString:7 value:self.createTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasX) {
    size += computeDoubleSize(2, self.x);
  }
  if (self.hasY) {
    size += computeDoubleSize(3, self.y);
  }
  if (self.hasH) {
    size += computeDoubleSize(4, self.h);
  }
  if (self.hasPtype) {
    size += computeInt32Size(5, self.ptype);
  }
  if (self.hasPower) {
    size += computeDoubleSize(6, self.power);
  }
  if (self.hasCreateTime) {
    size += computeStringSize(7, self.createTime);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (Positions*) parseFromData:(NSData*) data {
  return (Positions*)[[[Positions builder] mergeFromData:data] build];
}
+ (Positions*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Positions*)[[[Positions builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Positions*) parseFromInputStream:(NSInputStream*) input {
  return (Positions*)[[[Positions builder] mergeFromInputStream:input] build];
}
+ (Positions*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Positions*)[[[Positions builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Positions*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Positions*)[[[Positions builder] mergeFromCodedInputStream:input] build];
}
+ (Positions*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Positions*)[[[Positions builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Positions_Builder*) builder {
  return [[[Positions_Builder alloc] init] autorelease];
}
+ (Positions_Builder*) builderWithPrototype:(Positions*) prototype {
  return [[Positions builder] mergeFrom:prototype];
}
- (Positions_Builder*) builder {
  return [Positions builder];
}
@end

@interface Positions_Builder()
@property (retain) Positions* result;
@end

@implementation Positions_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[Positions alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (Positions_Builder*) clear {
  self.result = [[[Positions alloc] init] autorelease];
  return self;
}
- (Positions_Builder*) clone {
  return [Positions builderWithPrototype:result];
}
- (Positions*) defaultInstance {
  return [Positions defaultInstance];
}
- (Positions*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Positions*) buildPartial {
  Positions* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (Positions_Builder*) mergeFrom:(Positions*) other {
  if (other == [Positions defaultInstance]) {
    return self;
  }
  if (other.hasX) {
    [self setX:other.x];
  }
  if (other.hasY) {
    [self setY:other.y];
  }
  if (other.hasH) {
    [self setH:other.h];
  }
  if (other.hasPtype) {
    [self setPtype:other.ptype];
  }
  if (other.hasPower) {
    [self setPower:other.power];
  }
  if (other.hasCreateTime) {
    [self setCreateTime:other.createTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (Positions_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (Positions_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 17: {
        [self setX:[input readDouble]];
        break;
      }
      case 25: {
        [self setY:[input readDouble]];
        break;
      }
      case 33: {
        [self setH:[input readDouble]];
        break;
      }
      case 40: {
        [self setPtype:[input readInt32]];
        break;
      }
      case 49: {
        [self setPower:[input readDouble]];
        break;
      }
      case 58: {
        [self setCreateTime:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasX {
  return result.hasX;
}
- (Float64) x {
  return result.x;
}
- (Positions_Builder*) setX:(Float64) value {
  result.hasX = YES;
  result.x = value;
  return self;
}
- (Positions_Builder*) clearX {
  result.hasX = NO;
  result.x = 0;
  return self;
}
- (BOOL) hasY {
  return result.hasY;
}
- (Float64) y {
  return result.y;
}
- (Positions_Builder*) setY:(Float64) value {
  result.hasY = YES;
  result.y = value;
  return self;
}
- (Positions_Builder*) clearY {
  result.hasY = NO;
  result.y = 0;
  return self;
}
- (BOOL) hasH {
  return result.hasH;
}
- (Float64) h {
  return result.h;
}
- (Positions_Builder*) setH:(Float64) value {
  result.hasH = YES;
  result.h = value;
  return self;
}
- (Positions_Builder*) clearH {
  result.hasH = NO;
  result.h = 0;
  return self;
}
- (BOOL) hasPtype {
  return result.hasPtype;
}
- (int32_t) ptype {
  return result.ptype;
}
- (Positions_Builder*) setPtype:(int32_t) value {
  result.hasPtype = YES;
  result.ptype = value;
  return self;
}
- (Positions_Builder*) clearPtype {
  result.hasPtype = NO;
  result.ptype = 0;
  return self;
}
- (BOOL) hasPower {
  return result.hasPower;
}
- (Float64) power {
  return result.power;
}
- (Positions_Builder*) setPower:(Float64) value {
  result.hasPower = YES;
  result.power = value;
  return self;
}
- (Positions_Builder*) clearPower {
  result.hasPower = NO;
  result.power = 0;
  return self;
}
- (BOOL) hasCreateTime {
  return result.hasCreateTime;
}
- (NSString*) createTime {
  return result.createTime;
}
- (Positions_Builder*) setCreateTime:(NSString*) value {
  result.hasCreateTime = YES;
  result.createTime = value;
  return self;
}
- (Positions_Builder*) clearCreateTime {
  result.hasCreateTime = NO;
  result.createTime = @"";
  return self;
}
@end

